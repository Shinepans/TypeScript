=== tests/cases/compiler/sourceMapValidationDestructuringForOfObjectBindingPatternDefaultValues2.ts ===
declare var console: {
>console : { log(msg: any): void; }

    log(msg: any): void;
>log : (msg: any) => void
>msg : any
}
interface Robot {
>Robot : Robot

    name: string;
>name : string

    skill: string;
>skill : string
}

interface MultiRobot {
>MultiRobot : MultiRobot

    name: string;
>name : string

    skills: {
>skills : { primary: string; secondary: string; }

        primary: string;
>primary : string

        secondary: string;
>secondary : string

    };
}

let robots: Robot[] = [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }];
>robots : Robot[]
>Robot : Robot
>[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : ({ name: "mower"; skill: "mowing"; } | { name: "trimmer"; skill: "trimming"; })[]
>{ name: "mower", skill: "mowing" } : { name: "mower"; skill: "mowing"; }
>name : "mower"
>"mower" : "mower"
>skill : "mowing"
>"mowing" : "mowing"
>{ name: "trimmer", skill: "trimming" } : { name: "trimmer"; skill: "trimming"; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skill : "trimming"
>"trimming" : "trimming"

let multiRobots: MultiRobot[] = [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
>multiRobots : MultiRobot[]
>MultiRobot : MultiRobot
>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : ({ name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; } | { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; })[]
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; }
>name : "mower"
>"mower" : "mower"
>skills : { primary: "mowing"; secondary: "none"; }
>{ primary: "mowing", secondary: "none" } : { primary: "mowing"; secondary: "none"; }
>primary : "mowing"
>"mowing" : "mowing"
>secondary : "none"
>"none" : "none"

    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }];
>{ name: "trimmer", skills: { primary: "trimming", secondary: "edging" } } : { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skills : { primary: "trimming"; secondary: "edging"; }
>{ primary: "trimming", secondary: "edging" } : { primary: "trimming"; secondary: "edging"; }
>primary : "trimming"
>"trimming" : "trimming"
>secondary : "edging"
>"edging" : "edging"

function getRobots() {
>getRobots : () => Robot[]

    return robots;
>robots : Robot[]
}

function getMultiRobots() {
>getMultiRobots : () => MultiRobot[]

    return multiRobots;
>multiRobots : MultiRobot[]
}

let nameA: string, primaryA: string, secondaryA: string, i: number, skillA: string;
>nameA : string
>primaryA : string
>secondaryA : string
>i : number
>skillA : string

let name: string, primary: string, secondary: string, skill: string;
>name : string
>primary : string
>secondary : string
>skill : string

for ({name: nameA = "noName" } of robots) {
>{name: nameA = "noName" } : { name: "noName"; }
>name : Robot
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"
>robots : Robot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({name: nameA = "noName" } of getRobots()) {
>{name: nameA = "noName" } : { name: "noName"; }
>name : Robot
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"
>getRobots() : Robot[]
>getRobots : () => Robot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({name: nameA = "noName" } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
>{name: nameA = "noName" } : { name: "noName"; }
>name : { name: "mower"; skill: "mowing"; } | { name: "trimmer"; skill: "trimming"; }
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"
>[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : ({ name: "mower"; skill: "mowing"; } | { name: "trimmer"; skill: "trimming"; })[]
>{ name: "mower", skill: "mowing" } : { name: "mower"; skill: "mowing"; }
>name : "mower"
>"mower" : "mower"
>skill : "mowing"
>"mowing" : "mowing"
>{ name: "trimmer", skill: "trimming" } : { name: "trimmer"; skill: "trimming"; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skill : "trimming"
>"trimming" : "trimming"

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({ skills: { primary: primaryA = "primary", secondary: secondaryA = "secondary" } =
>{ skills: { primary: primaryA = "primary", secondary: secondaryA = "secondary" } =    { primary: "nosKill", secondary: "noSkill" } } : { skills: { primary?: "nosKill"; secondary?: "noSkill"; }; }
>skills : MultiRobot
>{ primary: primaryA = "primary", secondary: secondaryA = "secondary" } =    { primary: "nosKill", secondary: "noSkill" } : { primary?: "nosKill"; secondary?: "noSkill"; }
>{ primary: primaryA = "primary", secondary: secondaryA = "secondary" } : { primary?: "primary"; secondary?: "secondary"; }
>primary : "primary"
>primaryA = "primary" : "primary"
>primaryA : string
>"primary" : "primary"
>secondary : "secondary"
>secondaryA = "secondary" : "secondary"
>secondaryA : string
>"secondary" : "secondary"

    { primary: "nosKill", secondary: "noSkill" } } of multiRobots) {
>{ primary: "nosKill", secondary: "noSkill" } : { primary?: "nosKill"; secondary?: "noSkill"; }
>primary : "nosKill"
>"nosKill" : "nosKill"
>secondary : "noSkill"
>"noSkill" : "noSkill"
>multiRobots : MultiRobot[]

    console.log(primaryA);
>console.log(primaryA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primaryA : string
}
for ({ skills: { primary: primaryA = "primary", secondary: secondaryA = "secondary" } =
>{ skills: { primary: primaryA = "primary", secondary: secondaryA = "secondary" } =    { primary: "nosKill", secondary: "noSkill" } } : { skills: { primary?: "nosKill"; secondary?: "noSkill"; }; }
>skills : MultiRobot
>{ primary: primaryA = "primary", secondary: secondaryA = "secondary" } =    { primary: "nosKill", secondary: "noSkill" } : { primary?: "nosKill"; secondary?: "noSkill"; }
>{ primary: primaryA = "primary", secondary: secondaryA = "secondary" } : { primary?: "primary"; secondary?: "secondary"; }
>primary : "primary"
>primaryA = "primary" : "primary"
>primaryA : string
>"primary" : "primary"
>secondary : "secondary"
>secondaryA = "secondary" : "secondary"
>secondaryA : string
>"secondary" : "secondary"

    { primary: "nosKill", secondary: "noSkill" } } of getMultiRobots()) {
>{ primary: "nosKill", secondary: "noSkill" } : { primary?: "nosKill"; secondary?: "noSkill"; }
>primary : "nosKill"
>"nosKill" : "nosKill"
>secondary : "noSkill"
>"noSkill" : "noSkill"
>getMultiRobots() : MultiRobot[]
>getMultiRobots : () => MultiRobot[]

    console.log(primaryA);
>console.log(primaryA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primaryA : string
}
for ({ skills: { primary: primaryA = "primary", secondary: secondaryA = "secondary" } =
>{ skills: { primary: primaryA = "primary", secondary: secondaryA = "secondary" } =    { primary: "nosKill", secondary: "noSkill" } } : { skills: { primary?: "nosKill"; secondary?: "noSkill"; }; }
>skills : MultiRobot
>{ primary: primaryA = "primary", secondary: secondaryA = "secondary" } =    { primary: "nosKill", secondary: "noSkill" } : { primary?: "nosKill"; secondary?: "noSkill"; }
>{ primary: primaryA = "primary", secondary: secondaryA = "secondary" } : { primary?: "primary"; secondary?: "secondary"; }
>primary : "primary"
>primaryA = "primary" : "primary"
>primaryA : string
>"primary" : "primary"
>secondary : "secondary"
>secondaryA = "secondary" : "secondary"
>secondaryA : string
>"secondary" : "secondary"

    { primary: "nosKill", secondary: "noSkill" } } of
>{ primary: "nosKill", secondary: "noSkill" } : { primary?: "nosKill"; secondary?: "noSkill"; }
>primary : "nosKill"
>"nosKill" : "nosKill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

    <MultiRobot[]>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
><MultiRobot[]>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },        { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : MultiRobot[]
>MultiRobot : MultiRobot
>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },        { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : ({ name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; } | { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; })[]
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; }
>name : "mower"
>"mower" : "mower"
>skills : { primary: "mowing"; secondary: "none"; }
>{ primary: "mowing", secondary: "none" } : { primary: "mowing"; secondary: "none"; }
>primary : "mowing"
>"mowing" : "mowing"
>secondary : "none"
>"none" : "none"

        { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]) {
>{ name: "trimmer", skills: { primary: "trimming", secondary: "edging" } } : { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skills : { primary: "trimming"; secondary: "edging"; }
>{ primary: "trimming", secondary: "edging" } : { primary: "trimming"; secondary: "edging"; }
>primary : "trimming"
>"trimming" : "trimming"
>secondary : "edging"
>"edging" : "edging"

    console.log(primaryA);
>console.log(primaryA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primaryA : string
}

for ({ name = "noName" } of robots) {
>{ name = "noName" } : { name: string; }
>name : Robot
>robots : Robot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({ name = "noName" } of getRobots()) {
>{ name = "noName" } : { name: string; }
>name : Robot
>getRobots() : Robot[]
>getRobots : () => Robot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({ name = "noName" } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
>{ name = "noName" } : { name: string; }
>name : { name: string; skill: string; } | { name: string; skill: string; }
>[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : ({ name: "mower"; skill: "mowing"; } | { name: "trimmer"; skill: "trimming"; })[]
>{ name: "mower", skill: "mowing" } : { name: "mower"; skill: "mowing"; }
>name : "mower"
>"mower" : "mower"
>skill : "mowing"
>"mowing" : "mowing"
>{ name: "trimmer", skill: "trimming" } : { name: "trimmer"; skill: "trimming"; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skill : "trimming"
>"trimming" : "trimming"

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({
>{    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    skills: {
>skills : MultiRobot
>{        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }

        primary = "primary",
>primary : string

        secondary = "secondary"
>secondary : string

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of multiRobots) {
>multiRobots : MultiRobot[]

    console.log(primaryA);
>console.log(primaryA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primaryA : string
}
for ({
>{    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    skills: {
>skills : MultiRobot
>{        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }

        primary = "primary",
>primary : string

        secondary = "secondary"
>secondary : string

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of getMultiRobots()) {
>getMultiRobots() : MultiRobot[]
>getMultiRobots : () => MultiRobot[]

    console.log(primaryA);
>console.log(primaryA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primaryA : string
}
for ({
>{    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    skills: {
>skills : { name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; } | { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; }
>{        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }

        primary = "primary",
>primary : string

        secondary = "secondary"
>secondary : string

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : ({ name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; } | { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; })[]
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; }
>name : "mower"
>"mower" : "mower"
>skills : { primary: "mowing"; secondary: "none"; }
>{ primary: "mowing", secondary: "none" } : { primary: "mowing"; secondary: "none"; }
>primary : "mowing"
>"mowing" : "mowing"
>secondary : "none"
>"none" : "none"

    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]) {
>{ name: "trimmer", skills: { primary: "trimming", secondary: "edging" } } : { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skills : { primary: "trimming"; secondary: "edging"; }
>{ primary: "trimming", secondary: "edging" } : { primary: "trimming"; secondary: "edging"; }
>primary : "trimming"
>"trimming" : "trimming"
>secondary : "edging"
>"edging" : "edging"

    console.log(primaryA);
>console.log(primaryA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>primaryA : string
}


for ({name: nameA = "noName", skill: skillA = "noSkill" } of robots) {
>{name: nameA = "noName", skill: skillA = "noSkill" } : { name: "noName"; skill: "noSkill"; }
>name : Robot
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"
>skill : Robot
>skillA = "noSkill" : "noSkill"
>skillA : string
>"noSkill" : "noSkill"
>robots : Robot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({name: nameA = "noName", skill: skillA = "noSkill"  } of getRobots()) {
>{name: nameA = "noName", skill: skillA = "noSkill"  } : { name: "noName"; skill: "noSkill"; }
>name : Robot
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"
>skill : Robot
>skillA = "noSkill" : "noSkill"
>skillA : string
>"noSkill" : "noSkill"
>getRobots() : Robot[]
>getRobots : () => Robot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({name: nameA = "noName", skill: skillA = "noSkill"  } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
>{name: nameA = "noName", skill: skillA = "noSkill"  } : { name: "noName"; skill: "noSkill"; }
>name : { name: "mower"; skill: "mowing"; } | { name: "trimmer"; skill: "trimming"; }
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"
>skill : { name: "mower"; skill: "mowing"; } | { name: "trimmer"; skill: "trimming"; }
>skillA = "noSkill" : "noSkill"
>skillA : string
>"noSkill" : "noSkill"
>[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : ({ name: "mower"; skill: "mowing"; } | { name: "trimmer"; skill: "trimming"; })[]
>{ name: "mower", skill: "mowing" } : { name: "mower"; skill: "mowing"; }
>name : "mower"
>"mower" : "mower"
>skill : "mowing"
>"mowing" : "mowing"
>{ name: "trimmer", skill: "trimming" } : { name: "trimmer"; skill: "trimming"; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skill : "trimming"
>"trimming" : "trimming"

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({
>{    name: nameA = "noName",    skills: {        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name: "noName"; skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    name: nameA = "noName",
>name : MultiRobot
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"

    skills: {
>skills : MultiRobot
>{        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } : { primary?: "primary"; secondary?: "secondary"; }

        primary: primaryA = "primary",
>primary : "primary"
>primaryA = "primary" : "primary"
>primaryA : string
>"primary" : "primary"

        secondary: secondaryA = "secondary"
>secondary : "secondary"
>secondaryA = "secondary" : "secondary"
>secondaryA : string
>"secondary" : "secondary"

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of multiRobots) {
>multiRobots : MultiRobot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({
>{    name: nameA = "noName",    skills: {        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name: "noName"; skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    name: nameA = "noName",
>name : MultiRobot
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"

    skills: {
>skills : MultiRobot
>{        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } : { primary?: "primary"; secondary?: "secondary"; }

        primary: primaryA = "primary",
>primary : "primary"
>primaryA = "primary" : "primary"
>primaryA : string
>"primary" : "primary"

        secondary: secondaryA = "secondary"
>secondary : "secondary"
>secondaryA = "secondary" : "secondary"
>secondaryA : string
>"secondary" : "secondary"

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of getMultiRobots()) {
>getMultiRobots() : MultiRobot[]
>getMultiRobots : () => MultiRobot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({
>{    name: nameA = "noName",    skills: {        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name: "noName"; skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    name: nameA = "noName",
>name : MultiRobot
>nameA = "noName" : "noName"
>nameA : string
>"noName" : "noName"

    skills: {
>skills : MultiRobot
>{        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary: primaryA = "primary",        secondary: secondaryA = "secondary"    } : { primary?: "primary"; secondary?: "secondary"; }

        primary: primaryA = "primary",
>primary : "primary"
>primaryA = "primary" : "primary"
>primaryA : string
>"primary" : "primary"

        secondary: secondaryA = "secondary"
>secondary : "secondary"
>secondaryA = "secondary" : "secondary"
>secondaryA : string
>"secondary" : "secondary"

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of <MultiRobot[]>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
><MultiRobot[]>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : MultiRobot[]
>MultiRobot : MultiRobot
>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : ({ name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; } | { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; })[]
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; }
>name : "mower"
>"mower" : "mower"
>skills : { primary: "mowing"; secondary: "none"; }
>{ primary: "mowing", secondary: "none" } : { primary: "mowing"; secondary: "none"; }
>primary : "mowing"
>"mowing" : "mowing"
>secondary : "none"
>"none" : "none"

    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]) {
>{ name: "trimmer", skills: { primary: "trimming", secondary: "edging" } } : { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skills : { primary: "trimming"; secondary: "edging"; }
>{ primary: "trimming", secondary: "edging" } : { primary: "trimming"; secondary: "edging"; }
>primary : "trimming"
>"trimming" : "trimming"
>secondary : "edging"
>"edging" : "edging"

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}

for ({ name = "noName", skill  = "noSkill" } of robots) {
>{ name = "noName", skill  = "noSkill" } : { name: string; skill: string; }
>name : Robot
>skill : Robot
>robots : Robot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({ name = "noName", skill = "noSkill"  } of getRobots()) {
>{ name = "noName", skill = "noSkill"  } : { name: string; skill: string; }
>name : Robot
>skill : Robot
>getRobots() : Robot[]
>getRobots : () => Robot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({ name = "noName", skill  = "noSkill" } of [{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }]) {
>{ name = "noName", skill  = "noSkill" } : { name: string; skill: string; }
>name : { name: string; skill: string; } | { name: string; skill: string; }
>skill : { name: string; skill: string; } | { name: string; skill: string; }
>[{ name: "mower", skill: "mowing" }, { name: "trimmer", skill: "trimming" }] : ({ name: "mower"; skill: "mowing"; } | { name: "trimmer"; skill: "trimming"; })[]
>{ name: "mower", skill: "mowing" } : { name: "mower"; skill: "mowing"; }
>name : "mower"
>"mower" : "mower"
>skill : "mowing"
>"mowing" : "mowing"
>{ name: "trimmer", skill: "trimming" } : { name: "trimmer"; skill: "trimming"; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skill : "trimming"
>"trimming" : "trimming"

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({
>{    name = "noName",    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name: string; skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    name = "noName",
>name : MultiRobot

    skills: {
>skills : MultiRobot
>{        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }

        primary = "primary",
>primary : string

        secondary = "secondary"
>secondary : string

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of multiRobots) {
>multiRobots : MultiRobot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({
>{    name = "noName",    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name: string; skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    name = "noName",
>name : MultiRobot

    skills: {
>skills : MultiRobot
>{        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }

        primary = "primary",
>primary : string

        secondary = "secondary"
>secondary : string

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of getMultiRobots()) {
>getMultiRobots() : MultiRobot[]
>getMultiRobots : () => MultiRobot[]

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
for ({
>{    name = "noName",    skills: {        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" }} : { name: string; skills: { primary?: "noSkill"; secondary?: "noSkill"; }; }

    name = "noName",
>name : { name: string; skills: { primary: string; secondary: string; }; } | { name: string; skills: { primary: string; secondary: string; }; }

    skills: {
>skills : { name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; } | { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; }
>{        primary = "primary",        secondary = "secondary"    } = { primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>{        primary = "primary",        secondary = "secondary"    } : { primary?: string; secondary?: string; }

        primary = "primary",
>primary : string

        secondary = "secondary"
>secondary : string

    } = { primary: "noSkill", secondary: "noSkill" }
>{ primary: "noSkill", secondary: "noSkill" } : { primary?: "noSkill"; secondary?: "noSkill"; }
>primary : "noSkill"
>"noSkill" : "noSkill"
>secondary : "noSkill"
>"noSkill" : "noSkill"

} of [{ name: "mower", skills: { primary: "mowing", secondary: "none" } },
>[{ name: "mower", skills: { primary: "mowing", secondary: "none" } },    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }] : ({ name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; } | { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; })[]
>{ name: "mower", skills: { primary: "mowing", secondary: "none" } } : { name: "mower"; skills: { primary: "mowing"; secondary: "none"; }; }
>name : "mower"
>"mower" : "mower"
>skills : { primary: "mowing"; secondary: "none"; }
>{ primary: "mowing", secondary: "none" } : { primary: "mowing"; secondary: "none"; }
>primary : "mowing"
>"mowing" : "mowing"
>secondary : "none"
>"none" : "none"

    { name: "trimmer", skills: { primary: "trimming", secondary: "edging" } }]) {
>{ name: "trimmer", skills: { primary: "trimming", secondary: "edging" } } : { name: "trimmer"; skills: { primary: "trimming"; secondary: "edging"; }; }
>name : "trimmer"
>"trimmer" : "trimmer"
>skills : { primary: "trimming"; secondary: "edging"; }
>{ primary: "trimming", secondary: "edging" } : { primary: "trimming"; secondary: "edging"; }
>primary : "trimming"
>"trimming" : "trimming"
>secondary : "edging"
>"edging" : "edging"

    console.log(nameA);
>console.log(nameA) : void
>console.log : (msg: any) => void
>console : { log(msg: any): void; }
>log : (msg: any) => void
>nameA : string
}
